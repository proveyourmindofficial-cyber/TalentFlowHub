import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";

const ApplicationSchema = z.object({
  job_id: z.string().nonempty(),
  candidate_id: z.string().nonempty(),
  stage: z.enum([
    "Applied",
    "Shortlisted",
    "L1 Scheduled",
    "L2 Scheduled",
    "Selected",
    "Offer Released",
    "Joined",
    "Rejected",
    "No Show",
    "Not Joined",
    "On Hold"
  ]),
  feedback: z.string().optional(),
  scheduled_date: z.string().optional()
});

export default function ApplicationForm({ jobs, candidates }) {
  const { register, handleSubmit } = useForm({
    resolver: zodResolver(ApplicationSchema)
  });

  const onSubmit = async (data) => {
    await fetch("/api/applications", {
      method: "POST",
      body: JSON.stringify(data)
    });
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
      {/* Select Job */}
      <select {...register("job_id")} className="border p-2 w-full">
        <option value="">Select Job</option>
        {jobs.map((job) => (
          <option key={job.id} value={job.id}>{job.title}</option>
        ))}
      </select>

      {/* Select Candidate */}
      <select {...register("candidate_id")} className="border p-2 w-full">
        <option value="">Select Candidate</option>
        {candidates.map((c) => (
          <option key={c.id} value={c.id}>{c.name}</option>
        ))}
      </select>

      {/* Stage Dropdown */}
      <select {...register("stage")} className="border p-2 w-full">
        <option value="Applied">Applied</option>
        <option value="Shortlisted">Shortlisted</option>
        <option value="L1 Scheduled">L1 Scheduled</option>
        <option value="L2 Scheduled">L2 Scheduled</option>
        <option value="Selected">Selected</option>
        <option value="Offer Released">Offer Released</option>
        <option value="Joined">Joined</option>
        <option value="Rejected">Rejected</option>
        <option value="No Show">No Show</option>
        <option value="Not Joined">Not Joined</option>
        <option value="On Hold">On Hold</option>
      </select>

      {/* Scheduled Date */}
      <input type="datetime-local" {...register("scheduled_date")} className="border p-2 w-full" />

      {/* Feedback */}
      <textarea {...register("feedback")} placeholder="Feedback" className="border p-2 w-full" />

      <button type="submit" className="bg-blue-600 text-white px-4 py-2">Save</button>
    </form>
  );
}
